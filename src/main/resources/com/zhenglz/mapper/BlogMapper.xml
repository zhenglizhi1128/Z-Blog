<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhenglz.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.zhenglz.entity.Blog">
    <!--@Table m_blog-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="content_id" jdbcType="BIGINT" property="contentId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="read_number" jdbcType="BIGINT" property="readNumber" />
    <result column="like_number" jdbcType="BIGINT" property="likeNumber" />
    <result column="comment_number" jdbcType="BIGINT" property="commentNumber" />
    <result column="status" jdbcType="BOOLEAN" property="status" />
    <result column="comment_status" jdbcType="BOOLEAN" property="commentStatus" />
  </resultMap>

  <sql id="Base_Column_List">
    id, user_id, title, description, content_id, create_time, update_time, read_number,
    like_number, comment_number, `status`, comment_status
  </sql>

  <select id="getBlogById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from m_blog
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteById" parameterType="java.lang.Long">
    delete from m_blog
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zhenglz.entity.Blog" useGeneratedKeys="true">
    insert into m_blog (user_id, title, description,
      content_id, create_time, update_time, 
      read_number, like_number, comment_number, 
      `status`, comment_status)
    values (#{userId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{contentId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{readNumber,jdbcType=BIGINT}, #{likeNumber,jdbcType=BIGINT}, #{commentNumber,jdbcType=BIGINT}, 
      #{status,jdbcType=BOOLEAN}, #{commentStatus,jdbcType=BOOLEAN})
  </insert>


  <update id="updatePrimaryById" parameterType="com.zhenglz.entity.Blog">
    update m_blog
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="contentId != null">
        content_id = #{contentId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readNumber != null">
        read_number = #{readNumber,jdbcType=BIGINT},
      </if>
      <if test="likeNumber != null">
        like_number = #{likeNumber,jdbcType=BIGINT},
      </if>
      <if test="commentNumber != null">
        comment_number = #{commentNumber,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BOOLEAN},
      </if>
      <if test="commentStatus != null">
        comment_status = #{commentStatus,jdbcType=BOOLEAN},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateById" parameterType="com.zhenglz.entity.Blog">
    update m_blog
    set user_id = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      content_id = #{contentId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      read_number = #{readNumber,jdbcType=BIGINT},
      like_number = #{likeNumber,jdbcType=BIGINT},
      comment_number = #{commentNumber,jdbcType=BIGINT},
      `status` = #{status,jdbcType=BOOLEAN},
      comment_status = #{commentStatus,jdbcType=BOOLEAN}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="listBlogs" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from m_blog
  </select>

  <select id="countByUserId" parameterType="java.lang.Long" resultType="java.lang.Integer" >
    select count(*) from m_blog WHERE user_id =#{userId}
  </select>

  <select id="listBlogsByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from m_blog WHERE user_id =#{userId}
  </select>

  <delete id="deleteByUserId" parameterType="java.lang.Long">
    delete from m_blog
    where user_id =#{userId}
  </delete>

</mapper>