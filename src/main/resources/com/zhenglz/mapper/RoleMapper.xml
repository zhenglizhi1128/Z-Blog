<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhenglz.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.zhenglz.entity.Role">
        <!--@Table m_role-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        name,
        description,
        create_time,
        update_time
    </sql>

    <select id="getRoleById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_role
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from m_role
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.zhenglz.entity.Role">
        insert into m_role (id, `name`, description,
        create_time, update_time)
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="updatePrimaryById" parameterType="com.zhenglz.entity.Role">
        update m_role
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateById" parameterType="com.zhenglz.entity.Role">
        update m_role
        set `name` = #{name,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="listRolesByUserId" resultMap="BaseResultMap">
        SELECT m_role.*
        FROM m_role,
        m_user,
        m_user_role
        WHERE m_user.id = m_user_role.user_id
        AND m_role.id = m_user_role.role_id
        AND m_user.id = #{userId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByUserId" parameterType="java.lang.Long">
        delete from m_user_role
        where user_id = #{userId,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByUserIdAndIds" parameterType="java.util.List">
        delete from m_user_role t where t.user_id = #{userId,jdbcType=BIGINT}
        and t.role_id in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item.pathId,jdbcType=VARCHAR}
        </foreach>
    </delete>

    <insert id="insertByUserId" parameterType="java.lang.Long">
        insert into m_user_role ( user_id, role_id)
        values (#{userId,jdbcType=BIGINT}, #{roleId,jdbcType=VARCHAR})
    </insert>

    <select id="listRoles" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM m_role
    </select>
</mapper>

