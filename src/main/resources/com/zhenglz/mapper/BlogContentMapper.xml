<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhenglz.mapper.BlogContentMapper">
    <resultMap id="BaseResultMap" type="com.zhenglz.entity.BlogContent">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        content
    </sql>

    <select id="getBlogContentById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_blog_content
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete
        from m_blog_content
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zhenglz.entity.BlogContent"
            useGeneratedKeys="true">
        insert into m_blog_content (content)
        values (#{content,jdbcType=LONGVARCHAR})
    </insert>

    <update id="updatePrimaryById" parameterType="com.zhenglz.entity.BlogContent">
        update m_blog_content
        <set>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateById" parameterType="com.zhenglz.entity.BlogContent">
        update m_blog_content
        set content = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>


    <delete id="deleteByUserId" parameterType="java.lang.Long">
        DELETE t1 from m_blog_content as t1,m_blog as t2 WHERE t2.content_id = t1.id and
        t2.user_id =#{userId}
    </delete>
</mapper>