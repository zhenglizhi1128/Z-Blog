<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhenglz.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="com.zhenglz.entity.Comment">
        <!--@Table m_comment-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="blog_id" jdbcType="BIGINT" property="blogId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="status" jdbcType="BOOLEAN" property="status"/>
        <result column="is_read" jdbcType="BOOLEAN" property="isRead"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        content,
        parent_id,
        create_time,
        update_time,
        blog_id,
        user_id,
        `status`,
        is_read
    </sql>

    <select id="getCommentById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_comment
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete
        from m_comment
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zhenglz.entity.Comment" useGeneratedKeys="true">
        insert into m_comment (content, parent_id, create_time,
                               update_time, blog_id, user_id,
                               `status`, is_read)
        values (#{content,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP}, #{blogId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
                #{status,jdbcType=BOOLEAN}, #{isRead,jdbcType=BOOLEAN})
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.zhenglz.entity.Comment">
        update m_comment
        <set>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blogId != null">
                blog_id = #{blogId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=BOOLEAN},
            </if>
            <if test="isRead != null">
                is_read = #{isRead,jdbcType=BOOLEAN},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateById" parameterType="com.zhenglz.entity.Comment">
        update m_comment
        set content     = #{content,jdbcType=VARCHAR},
            parent_id   = #{parentId,jdbcType=BIGINT},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            blog_id     = #{blogId,jdbcType=BIGINT},
            user_id     = #{userId,jdbcType=BIGINT},
            `status`    = #{status,jdbcType=BOOLEAN},
            is_read     = #{isRead,jdbcType=BOOLEAN}
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>